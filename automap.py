import ika
import riptiles
import system


automapdata = { #automap data for all maps because I'm lazy, in (x, y, w, h, layer) notation
'map01.ika-map' : (10, 32, 3, 2, 'snow'),
'map02.ika-map' : (7, 30, 3, 3, 'snow'),
'map03.ika-map' : (2, 30, 5, 2, 'snow'),
'map04.ika-map' : (7, 30, 2, 3, 'snow'),
'map05.ika-map' : (2, 26, 1, 1, 'cave'),
'map06.ika-map' : (8, 18, 3, 3, 'snow'),
#'map07.ika-map' : (7, 30, 3, 3, 'snow'),
'map08.ika-map' : (5, 19, 3, 2, 'snow'),
'map11.ika-map' : (5, 21, 3, 2, 'snow'),
'map12.ika-map' : (4, 22, 1, 1, 'cave')
} 


class Automap(object):
    def __init__(self):
        self.maptiles=riptiles.RipTiles('overworld/maptiles.png', 12, 9)
        
        self.bg=ika.Image('overworld/mapbg.png')
        self.cavebg=ika.Image('overworld/mapbg-cave.png')
        
        
        
        self.snowdata=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 10, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 5, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 15, 11, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 16, 0, 0, 0, 0, 0, 0, 0, 6, 10, 7, 6, 7, 2, 0, 0, 0, 0, 0, 0, 6, 10, 10, 7, 0, 0, 0, 0, 0, 0, 12, 5, 13, 12, 13, 0, 0, 0, 0, 0, 8, 9, 15, 11, 11, 16, 0, 0, 0, 0, 0, 0, 15, 11, 16, 15, 16, 0, 0, 0, 0, 0, 6, 7, 8, 9, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 10, 7, 0, 0, 0, 0, 15, 16, 0, 0, 12, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 5, 13, 0, 0, 0, 0, 6, 7, 0, 0, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 6, 10, 7, 0, 15, 16, 6, 7, 6, 10, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 9, 12, 0, 13, 0, 0, 0, 15, 16, 12, 5, 13, 0, 0, 0, 6, 10, 10, 7, 6, 10, 10, 7, 15, 11, 16, 0, 0, 0, 6, 7, 15, 11, 16, 6, 10, 7, 15, 11, 11, 16, 15, 11, 11, 16, 0, 0, 0, 0, 0, 0, 15, 16, 6, 10, 7, 12, 5, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 15, 11, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 10, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 13, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 16, 0, 0, 0, 0, 18, 0, 0, 0, 0, 6, 10, 7, 0, 0, 0, 0, 0, 0, 0, 0, 6, 10, 10, 10, 7, 6, 10, 7, 6, 10, 7, 12, 5, 13, 2, 0, 0, 0, 0, 0, 0, 0, 15, 11, 11, 11, 16, 12, 5, 13, 15, 11, 16, 15, 11, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 6, 10, 7, 0, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 11, 16, 0, 15, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        self.snowicons=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]    
        self.mapwidth=22
        self.mapheight=35
        self.tilewidth=12
        self.tileheight=9
        
        self.snowvisible=[0]*(self.mapwidth*self.mapheight)
        
        
        self.px=0
        self.py=0
        self.frame=0
        self.layer=''

    def update(self):
        x=y=w=h=0        
        
        if system.engine.mapName in automapdata:                    
            x,y,w,h,self.layer = automapdata[system.engine.mapName]
        
        #refresh which rooms should be visible:
        for tx in range(x, x+w):
           for ty in range(y, y+h):
              self.snowvisible[ty*self.mapwidth+tx]=1
        
        px = system.engine.player.x
        py = system.engine.player.y        
        
        self.py = int((float(py) / ika.Map.height) * h) + y        
        self.px = int((float(px) / ika.Map.width) * w) + x        
        self.ticks=0
        self.time=ika.GetTime()
        
        
    def draw(self, topx, topy):              
        t=ika.GetTime()
        if t>self.time: 
            self.time=t
            self.ticks+=1
            
        if self.layer=='cave': 
            ika.Video.Blit(self.cavebg, topx-2,topy-3)
        else:
            ika.Video.Blit(self.bg, topx-2,topy-3)
        
    
        for y in range(self.mapheight):
            for x in range(self.mapwidth):
                for tset in [self.snowdata, self.snowicons]:
                    tile = tset[y*self.mapwidth+x]
                    if tile and self.snowvisible[y*self.mapwidth+x]: 
                        ika.Video.Blit(self.maptiles[tile-1], topx+(x*self.tilewidth),topy+(y*self.tileheight))
                        
        if self.ticks %20 <10: ika.Video.Blit(self.maptiles[18], topx+(self.px*self.tilewidth), topy+(self.py*self.tileheight))
        
        
        
        
        
        
map = Automap()        
        